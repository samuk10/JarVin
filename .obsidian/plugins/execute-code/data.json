{
  "lastOpenLanguageTab": "js",
  "releaseNote2_0_0wasShowed": true,
  "persistentOuput": false,
  "timeout": 10000,
  "allowInput": true,
  "wslMode": false,
  "shellWSLMode": false,
  "onlyCurrentBlock": false,
  "nodePath": "/home/samuel/.nvm/versions/node/v22.6.0/bin/node",
  "nodeArgs": "",
  "jsFileExtension": "js",
  "jsInject": "",
  "tsPath": "ts-node",
  "tsArgs": "",
  "tsInject": "",
  "leanPath": "lean",
  "leanArgs": "",
  "leanInject": "",
  "luaPath": "lua",
  "luaArgs": "",
  "luaFileExtension": "lua",
  "luaInject": "",
  "dartPath": "dart",
  "dartArgs": "",
  "dartFileExtension": "dart",
  "dartInject": "",
  "csPath": "dotnet-script",
  "csArgs": "",
  "csFileExtension": "csx",
  "csInject": "",
  "pythonPath": "/home/samuel/Dropbox/Aplicativos/remotely-save/JarVin/.obsidian/scripts/venv/bin/python3",
  "pythonArgs": "",
  "pythonEmbedPlots": true,
  "pythonFileExtension": "py",
  "pythonInject": "# From nos-scraper project (local folder)\n\nimport requests\nimport bs4\nimport random\nimport datetime\n\nignore = [\"dood\", \"doden\", \"moord\", \"martel\"]\n\nWIND_DIRECTION = {\n    'N': 'noorden',\n    'NNO': 'noordnoordoosten',\n    'NO': 'noordoosten',\n    'ONO': 'oostnoordoosten',\n    'O': 'oosten',\n    'OZO': 'oostzuidoosten',\n    'ZO': 'zuidoosten',\n    'ZZO': 'zuidzuidoosten',\n    'Z': 'zuiden',\n    'ZZW': 'zuidzuidwesten',\n    'ZW': 'zuidwesten',\n    'WZW': 'westzuidwesten',\n    'W': 'westen',\n    'WNW': 'westnoordwesten',\n    'NW': 'noordwesten',\n    'NNW': 'noordnoordwesten',\n    'Zuid': 'zuiden',\n    'West': 'westen',\n    'Noord': 'noorden',\n    'Oost': 'oosten',\n }\n\ndef get_headlines(date):\n    base_url = \"https://nos.nl/nieuws/archief/\"\n    url = base_url + date\n    response = requests.get(url)\n    soup = bs4.BeautifulSoup(response.text, \"html.parser\")\n    headlines_html = soup.find_all(\"div\", {\"class\": \"list-time__title link-hover\"})\n    headlines = [headline.text for headline in headlines_html]\n    return headlines\n\ndef filter_headlines(headlines, ignore):\n    filtered = []\n    for headline in headlines:\n        if not any(word in headline.lower() for word in ignore):\n            filtered.append(headline)\n    return filtered\n\ndef get_sample(headlines, N):\n    N = min(N, len(headlines)) \n    return random.sample(headlines, N)\n\ndef news_headlines(date, N):\n    headlines = get_headlines(date)\n    headlines = filter_headlines(headlines, ignore)\n    sample = get_sample(headlines, N)\n    for headline in sample:\n        print(\"\\nâ€¢\", headline)\n    print()\n\ndef get_historic_weather_report(date):\n    base_url = \"https://weerverleden.nl/\"\n    url = base_url + date.replace(\"-\", \"\")\n    response = requests.get(url)\n    soup = bs4.BeautifulSoup(response.text, \"html.parser\")\n    weather_html = soup.find_all(\"p\", {\"class\": [\"wind\", \"temperature\", \"sun\", \"shower\", \"clouds\"]})\n    weather = [item.text for item in weather_html]\n    weather_report = \"\\n\" + \" \".join(weather) + \"\\n\"\n    return weather_report\n\n\ndef get_live_weather_report(location=\"Amsterdam\"):\n    base_url = \"https://weerlive.nl/api/json-data-10min.php?key=2e37799383&locatie=\"\n    url = base_url + location\n    response = requests.get(url)\n    data = response.json()[\"liveweer\"][0]\n    verw = data[\"verw\"].split(\".\")\n    verw[0] = verw[0].replace(verw[0][0], verw[0][0].lower())\n    weather_report = (\n        f\"\\nHet is {data['samenv'].lower()}, met een gemiddelde temperatuur van {data['gtemp']} graden. \"\n        + f\"De wind komt uit het {WIND_DIRECTION[data['windr']]}. \"\n        + f\"De zon komt op om {data['sup']} en gaat onder om {data['sunder']}. \"\n        + f\"De verwachting is {'.'.join(verw)}.\\n\"\n    )\n    return weather_report\n\n\ndef weather_report(date):\n    if date == datetime.date.today().strftime(\"%Y-%m-%d\"):\n        weather_report = get_live_weather_report()\n    else:\n        weather_report = get_historic_weather_report(date)\n    print(weather_report)\n",
  "shellPath": "bash",
  "shellArgs": "",
  "shellFileExtension": "sh",
  "shellInject": "",
  "batchPath": "call",
  "batchArgs": "",
  "batchFileExtension": "bat",
  "batchInject": "",
  "groovyPath": "groovy",
  "groovyArgs": "",
  "groovyFileExtension": "groovy",
  "groovyInject": "",
  "golangPath": "go",
  "golangArgs": "run",
  "golangFileExtension": "go",
  "goInject": "",
  "javaPath": "java",
  "javaArgs": "-ea",
  "javaFileExtension": "java",
  "javaInject": "",
  "maxPrologAnswers": 15,
  "prologInject": "",
  "powershellPath": "powershell",
  "powershellArgs": "-file",
  "powershellFileExtension": "ps1",
  "powershellInject": "$OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding",
  "powershellEncoding": "latin1",
  "cargoPath": "cargo",
  "cargoEvalArgs": "",
  "rustInject": "",
  "cppRunner": "cling",
  "cppFileExtension": "cpp",
  "cppInject": "",
  "cppArgs": "",
  "cppUseMain": false,
  "clingPath": "cling",
  "clingArgs": "",
  "clingStd": "c++17",
  "rustFileExtension": "rs",
  "RPath": "Rscript",
  "RArgs": "",
  "REmbedPlots": true,
  "RFileExtension": "R",
  "rInject": "",
  "kotlinPath": "kotlinc",
  "kotlinArgs": "-script",
  "kotlinFileExtension": "kts",
  "kotlinInject": "",
  "swiftPath": "swift",
  "swiftArgs": "",
  "swiftFileExtension": "swift",
  "swiftInject": "",
  "runghcPath": "runghc",
  "ghcPath": "ghc",
  "ghciPath": "ghci",
  "useGhci": false,
  "haskellInject": "",
  "mathematicaPath": "wolframscript",
  "mathematicaArgs": "-file",
  "mathematicaFileExtension": "wls",
  "mathematicaInject": "",
  "scalaPath": "scala",
  "scalaArgs": "",
  "scalaFileExtension": "scala",
  "scalaInject": "",
  "racketPath": "racket",
  "racketArgs": "",
  "racketFileExtension": "rkt",
  "racketInject": "#lang racket",
  "fsharpPath": "dotnet",
  "fsharpArgs": "",
  "fsharpInject": "",
  "fsharpFileExtension": "fsx",
  "cArgs": "",
  "cUseMain": true,
  "cInject": "",
  "rubyPath": "ruby",
  "rubyArgs": "",
  "rubyFileExtension": "rb",
  "rubyInject": "",
  "sqlPath": "psql",
  "sqlArgs": "-d <database> -U <user> -f",
  "sqlInject": "",
  "octavePath": "octave",
  "octaveArgs": "-q",
  "octaveFileExtension": "m",
  "octaveInject": "figure('visible','off')  # Necessary to embed plots",
  "maximaPath": "maxima",
  "maximaArgs": "-qb",
  "maximaFileExtension": "mx",
  "maximaInject": "",
  "applescriptPath": "osascript",
  "applescriptArgs": "",
  "applescriptFileExtension": "scpt",
  "applescriptInject": "",
  "zigPath": "zig",
  "zigArgs": "run",
  "zigInject": "",
  "ocamlPath": "ocaml",
  "ocamlArgs": "",
  "ocamlInject": "",
  "phpPath": "php",
  "phpArgs": "",
  "phpFileExtension": "php",
  "phpInject": "",
  "jsInteractive": true,
  "tsInteractive": false,
  "csInteractive": false,
  "leanInteractive": false,
  "luaInteractive": false,
  "dartInteractive": false,
  "pythonInteractive": false,
  "cppInteractive": false,
  "prologInteractive": false,
  "shellInteractive": false,
  "batchInteractive": false,
  "bashInteractive": false,
  "groovyInteractive": false,
  "rInteractive": false,
  "goInteractive": false,
  "rustInteractive": false,
  "javaInteractive": false,
  "powershellInteractive": false,
  "kotlinInteractive": false,
  "swiftInteractive": false,
  "mathematicaInteractive": false,
  "haskellInteractive": false,
  "scalaInteractive": false,
  "fsharpInteractive": false,
  "cInteractive": false,
  "racketInteractive": false,
  "rubyInteractive": false,
  "sqlInteractive": false,
  "octaveInteractive": false,
  "maximaInteractive": false,
  "applescriptInteractive": false,
  "zigInteractive": false,
  "ocamlInteractive": false,
  "phpInteractive": false
}